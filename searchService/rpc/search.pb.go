// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: search.proto

package searchRpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Vacancy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               uint64               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Organization     *VacancyOrganization `protobuf:"bytes,2,opt,name=Organization,proto3" json:"Organization,omitempty"`
	Name             string               `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description      string               `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	SalaryFrom       int64                `protobuf:"varint,5,opt,name=SalaryFrom,proto3" json:"SalaryFrom,omitempty"`
	SalaryTo         int64                `protobuf:"varint,6,opt,name=SalaryTo,proto3" json:"SalaryTo,omitempty"`
	WithTax          bool                 `protobuf:"varint,7,opt,name=WithTax,proto3" json:"WithTax,omitempty"`
	Responsibilities string               `protobuf:"bytes,8,opt,name=Responsibilities,proto3" json:"Responsibilities,omitempty"`
	Conditions       string               `protobuf:"bytes,9,opt,name=Conditions,proto3" json:"Conditions,omitempty"`
	Keywords         string               `protobuf:"bytes,10,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
}

func (x *Vacancy) Reset() {
	*x = Vacancy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vacancy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vacancy) ProtoMessage() {}

func (x *Vacancy) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vacancy.ProtoReflect.Descriptor instead.
func (*Vacancy) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{0}
}

func (x *Vacancy) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Vacancy) GetOrganization() *VacancyOrganization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *Vacancy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vacancy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Vacancy) GetSalaryFrom() int64 {
	if x != nil {
		return x.SalaryFrom
	}
	return 0
}

func (x *Vacancy) GetSalaryTo() int64 {
	if x != nil {
		return x.SalaryTo
	}
	return 0
}

func (x *Vacancy) GetWithTax() bool {
	if x != nil {
		return x.WithTax
	}
	return false
}

func (x *Vacancy) GetResponsibilities() string {
	if x != nil {
		return x.Responsibilities
	}
	return ""
}

func (x *Vacancy) GetConditions() string {
	if x != nil {
		return x.Conditions
	}
	return ""
}

func (x *Vacancy) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type VacancyOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Tag    string `protobuf:"bytes,2,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Email  string `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone  string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Avatar string `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Name   string `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	Site   string `protobuf:"bytes,7,opt,name=Site,proto3" json:"Site,omitempty"`
}

func (x *VacancyOrganization) Reset() {
	*x = VacancyOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VacancyOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VacancyOrganization) ProtoMessage() {}

func (x *VacancyOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VacancyOrganization.ProtoReflect.Descriptor instead.
func (*VacancyOrganization) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{1}
}

func (x *VacancyOrganization) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *VacancyOrganization) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *VacancyOrganization) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *VacancyOrganization) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *VacancyOrganization) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *VacancyOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VacancyOrganization) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint64               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Login      string               `protobuf:"bytes,2,opt,name=Login,proto3" json:"Login,omitempty"`
	Password   string               `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Tag        string               `protobuf:"bytes,4,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Email      string               `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone      string               `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Registered *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Registered,proto3" json:"Registered,omitempty"`
	Avatar     string               `protobuf:"bytes,8,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Name       string               `protobuf:"bytes,9,opt,name=Name,proto3" json:"Name,omitempty"`
	About      string               `protobuf:"bytes,10,opt,name=About,proto3" json:"About,omitempty"`
	Site       string               `protobuf:"bytes,11,opt,name=Site,proto3" json:"Site,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{2}
}

func (x *Organization) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Organization) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Organization) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Organization) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Organization) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Organization) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Organization) GetRegistered() *timestamp.Timestamp {
	if x != nil {
		return x.Registered
	}
	return nil
}

func (x *Organization) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *Organization) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint64               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Login      string               `protobuf:"bytes,2,opt,name=Login,proto3" json:"Login,omitempty"`
	Password   string               `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Tag        string               `protobuf:"bytes,4,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Email      string               `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone      string               `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Registered *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Registered,proto3" json:"Registered,omitempty"`
	Avatar     string               `protobuf:"bytes,8,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	FirstName  string               `protobuf:"bytes,9,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName   string               `protobuf:"bytes,10,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Gender     string               `protobuf:"bytes,11,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Birthday   *timestamp.Timestamp `protobuf:"bytes,12,opt,name=Birthday,proto3" json:"Birthday,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{3}
}

func (x *Person) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Person) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Person) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Person) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Person) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Person) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Person) GetRegistered() *timestamp.Timestamp {
	if x != nil {
		return x.Registered
	}
	return nil
}

func (x *Person) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Person) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Person) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Person) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Person) GetBirthday() *timestamp.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

type SearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request string `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
	Since   string `protobuf:"bytes,2,opt,name=Since,proto3" json:"Since,omitempty"`
	Desc    string `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
}

func (x *SearchParams) Reset() {
	*x = SearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParams) ProtoMessage() {}

func (x *SearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParams.ProtoReflect.Descriptor instead.
func (*SearchParams) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{4}
}

func (x *SearchParams) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *SearchParams) GetSince() string {
	if x != nil {
		return x.Since
	}
	return ""
}

func (x *SearchParams) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

var File_search_proto protoreflect.FileDescriptor

var file_search_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5,
	0x02, 0x0a, 0x07, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x46, 0x0a, 0x0c, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x54, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x78, 0x12, 0x2a,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x63, 0x61, 0x6e,
	0x63, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10,
	0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x74, 0x65, 0x22, 0xa0, 0x02, 0x0a,
	0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a,
	0x0a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x69, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x74, 0x65, 0x22,
	0xe6, 0x02, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x36, 0x0a, 0x08, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x22, 0x52, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x32, 0xf2, 0x01, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x47, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x53, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x22, 0x00, 0x30,
	0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_search_proto_rawDescOnce sync.Once
	file_search_proto_rawDescData = file_search_proto_rawDesc
)

func file_search_proto_rawDescGZIP() []byte {
	file_search_proto_rawDescOnce.Do(func() {
		file_search_proto_rawDescData = protoimpl.X.CompressGZIP(file_search_proto_rawDescData)
	})
	return file_search_proto_rawDescData
}

var file_search_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_search_proto_goTypes = []interface{}{
	(*Vacancy)(nil),             // 0: searchService.Vacancy
	(*VacancyOrganization)(nil), // 1: searchService.VacancyOrganization
	(*Organization)(nil),        // 2: searchService.Organization
	(*Person)(nil),              // 3: searchService.Person
	(*SearchParams)(nil),        // 4: searchService.SearchParams
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_search_proto_depIdxs = []int32{
	1, // 0: searchService.Vacancy.Organization:type_name -> searchService.VacancyOrganization
	5, // 1: searchService.Organization.Registered:type_name -> google.protobuf.Timestamp
	5, // 2: searchService.Person.Registered:type_name -> google.protobuf.Timestamp
	5, // 3: searchService.Person.Birthday:type_name -> google.protobuf.Timestamp
	4, // 4: searchService.Search.SearchPersons:input_type -> searchService.SearchParams
	4, // 5: searchService.Search.SearchOrganizations:input_type -> searchService.SearchParams
	4, // 6: searchService.Search.SearchVacancies:input_type -> searchService.SearchParams
	3, // 7: searchService.Search.SearchPersons:output_type -> searchService.Person
	2, // 8: searchService.Search.SearchOrganizations:output_type -> searchService.Organization
	0, // 9: searchService.Search.SearchVacancies:output_type -> searchService.Vacancy
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_search_proto_init() }
func file_search_proto_init() {
	if File_search_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_search_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vacancy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VacancyOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_search_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_proto_goTypes,
		DependencyIndexes: file_search_proto_depIdxs,
		MessageInfos:      file_search_proto_msgTypes,
	}.Build()
	File_search_proto = out.File
	file_search_proto_rawDesc = nil
	file_search_proto_goTypes = nil
	file_search_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SearchClient is the client API for Search service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchClient interface {
	SearchPersons(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (Search_SearchPersonsClient, error)
	SearchOrganizations(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (Search_SearchOrganizationsClient, error)
	SearchVacancies(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (Search_SearchVacanciesClient, error)
}

type searchClient struct {
	cc grpc.ClientConnInterface
}

func NewSearchClient(cc grpc.ClientConnInterface) SearchClient {
	return &searchClient{cc}
}

func (c *searchClient) SearchPersons(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (Search_SearchPersonsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Search_serviceDesc.Streams[0], "/searchService.Search/SearchPersons", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchSearchPersonsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Search_SearchPersonsClient interface {
	Recv() (*Person, error)
	grpc.ClientStream
}

type searchSearchPersonsClient struct {
	grpc.ClientStream
}

func (x *searchSearchPersonsClient) Recv() (*Person, error) {
	m := new(Person)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *searchClient) SearchOrganizations(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (Search_SearchOrganizationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Search_serviceDesc.Streams[1], "/searchService.Search/SearchOrganizations", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchSearchOrganizationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Search_SearchOrganizationsClient interface {
	Recv() (*Organization, error)
	grpc.ClientStream
}

type searchSearchOrganizationsClient struct {
	grpc.ClientStream
}

func (x *searchSearchOrganizationsClient) Recv() (*Organization, error) {
	m := new(Organization)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *searchClient) SearchVacancies(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (Search_SearchVacanciesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Search_serviceDesc.Streams[2], "/searchService.Search/SearchVacancies", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchSearchVacanciesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Search_SearchVacanciesClient interface {
	Recv() (*Vacancy, error)
	grpc.ClientStream
}

type searchSearchVacanciesClient struct {
	grpc.ClientStream
}

func (x *searchSearchVacanciesClient) Recv() (*Vacancy, error) {
	m := new(Vacancy)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SearchServer is the server API for Search service.
type SearchServer interface {
	SearchPersons(*SearchParams, Search_SearchPersonsServer) error
	SearchOrganizations(*SearchParams, Search_SearchOrganizationsServer) error
	SearchVacancies(*SearchParams, Search_SearchVacanciesServer) error
}

// UnimplementedSearchServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServer struct {
}

func (*UnimplementedSearchServer) SearchPersons(*SearchParams, Search_SearchPersonsServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchPersons not implemented")
}
func (*UnimplementedSearchServer) SearchOrganizations(*SearchParams, Search_SearchOrganizationsServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchOrganizations not implemented")
}
func (*UnimplementedSearchServer) SearchVacancies(*SearchParams, Search_SearchVacanciesServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchVacancies not implemented")
}

func RegisterSearchServer(s *grpc.Server, srv SearchServer) {
	s.RegisterService(&_Search_serviceDesc, srv)
}

func _Search_SearchPersons_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SearchServer).SearchPersons(m, &searchSearchPersonsServer{stream})
}

type Search_SearchPersonsServer interface {
	Send(*Person) error
	grpc.ServerStream
}

type searchSearchPersonsServer struct {
	grpc.ServerStream
}

func (x *searchSearchPersonsServer) Send(m *Person) error {
	return x.ServerStream.SendMsg(m)
}

func _Search_SearchOrganizations_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SearchServer).SearchOrganizations(m, &searchSearchOrganizationsServer{stream})
}

type Search_SearchOrganizationsServer interface {
	Send(*Organization) error
	grpc.ServerStream
}

type searchSearchOrganizationsServer struct {
	grpc.ServerStream
}

func (x *searchSearchOrganizationsServer) Send(m *Organization) error {
	return x.ServerStream.SendMsg(m)
}

func _Search_SearchVacancies_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SearchServer).SearchVacancies(m, &searchSearchVacanciesServer{stream})
}

type Search_SearchVacanciesServer interface {
	Send(*Vacancy) error
	grpc.ServerStream
}

type searchSearchVacanciesServer struct {
	grpc.ServerStream
}

func (x *searchSearchVacanciesServer) Send(m *Vacancy) error {
	return x.ServerStream.SendMsg(m)
}

var _Search_serviceDesc = grpc.ServiceDesc{
	ServiceName: "searchService.Search",
	HandlerType: (*SearchServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchPersons",
			Handler:       _Search_SearchPersons_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchOrganizations",
			Handler:       _Search_SearchOrganizations_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchVacancies",
			Handler:       _Search_SearchVacancies_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "search.proto",
}
