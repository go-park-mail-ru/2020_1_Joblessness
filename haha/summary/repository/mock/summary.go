// Code generated by MockGen. DO NOT EDIT.
// Source: joblessness/haha/summary (interfaces: SummaryRepository)

// Package mock is a generated GoMock package.
package summaryRepoMock

import (
	gomock "github.com/golang/mock/gomock"
	models "joblessness/haha/models"
	reflect "reflect"
)

// MockSummaryRepository is a mock of SummaryRepository interfaces
type MockSummaryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSummaryRepositoryMockRecorder
}

// MockSummaryRepositoryMockRecorder is the mock recorder for MockSummaryRepository
type MockSummaryRepositoryMockRecorder struct {
	mock *MockSummaryRepository
}

// NewMockSummaryRepository creates a new mock instance
func NewMockSummaryRepository(ctrl *gomock.Controller) *MockSummaryRepository {
	mock := &MockSummaryRepository{ctrl: ctrl}
	mock.recorder = &MockSummaryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSummaryRepository) EXPECT() *MockSummaryRepositoryMockRecorder {
	return m.recorder
}

// ChangeSummary mocks base method
func (m *MockSummaryRepository) ChangeSummary(arg0 *models.Summary) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeSummary", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeSummary indicates an expected call of ChangeSummary
func (mr *MockSummaryRepositoryMockRecorder) ChangeSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeSummary", reflect.TypeOf((*MockSummaryRepository)(nil).ChangeSummary), arg0)
}

// CreateSummary mocks base method
func (m *MockSummaryRepository) CreateSummary(arg0 *models.Summary) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSummary", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSummary indicates an expected call of CreateSummary
func (mr *MockSummaryRepositoryMockRecorder) CreateSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSummary", reflect.TypeOf((*MockSummaryRepository)(nil).CreateSummary), arg0)
}

// DeleteSummary mocks base method
func (m *MockSummaryRepository) DeleteSummary(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSummary", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSummary indicates an expected call of DeleteSummary
func (mr *MockSummaryRepositoryMockRecorder) DeleteSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSummary", reflect.TypeOf((*MockSummaryRepository)(nil).DeleteSummary), arg0)
}

// GetAllSummaries mocks base method
func (m *MockSummaryRepository) GetAllSummaries() ([]models.Summary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllSummaries")
	ret0, _ := ret[0].([]models.Summary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllSummaries indicates an expected call of GetAllSummaries
func (mr *MockSummaryRepositoryMockRecorder) GetAllSummaries() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllSummaries", reflect.TypeOf((*MockSummaryRepository)(nil).GetAllSummaries))
}

// GetSummary mocks base method
func (m *MockSummaryRepository) GetSummary(arg0 uint64) (*models.Summary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSummary", arg0)
	ret0, _ := ret[0].(*models.Summary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSummary indicates an expected call of GetSummary
func (mr *MockSummaryRepositoryMockRecorder) GetSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSummary", reflect.TypeOf((*MockSummaryRepository)(nil).GetSummary), arg0)
}

// GetUserSummaries mocks base method
func (m *MockSummaryRepository) GetUserSummaries(arg0 uint64) ([]models.Summary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserSummaries", arg0)
	ret0, _ := ret[0].([]models.Summary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserSummaries indicates an expected call of GetUserSummaries
func (mr *MockSummaryRepositoryMockRecorder) GetUserSummaries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserSummaries", reflect.TypeOf((*MockSummaryRepository)(nil).GetUserSummaries), arg0)
}
