// Code generated by MockGen. DO NOT EDIT.
// Source: joblessness/haha/vacancy/interfaces (interfaces: VacancyUseCase)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	models "joblessness/haha/models"
	reflect "reflect"
)

// MockVacancyUseCase is a mock of VacancyUseCase interface
type MockVacancyUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockVacancyUseCaseMockRecorder
}

// MockVacancyUseCaseMockRecorder is the mock recorder for MockVacancyUseCase
type MockVacancyUseCaseMockRecorder struct {
	mock *MockVacancyUseCase
}

// NewMockVacancyUseCase creates a new mock instance
func NewMockVacancyUseCase(ctrl *gomock.Controller) *MockVacancyUseCase {
	mock := &MockVacancyUseCase{ctrl: ctrl}
	mock.recorder = &MockVacancyUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVacancyUseCase) EXPECT() *MockVacancyUseCaseMockRecorder {
	return m.recorder
}

// ChangeVacancy mocks base method
func (m *MockVacancyUseCase) ChangeVacancy(arg0 *models.Vacancy) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeVacancy", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeVacancy indicates an expected call of ChangeVacancy
func (mr *MockVacancyUseCaseMockRecorder) ChangeVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeVacancy", reflect.TypeOf((*MockVacancyUseCase)(nil).ChangeVacancy), arg0)
}

// CreateVacancy mocks base method
func (m *MockVacancyUseCase) CreateVacancy(arg0 *models.Vacancy) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVacancy", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVacancy indicates an expected call of CreateVacancy
func (mr *MockVacancyUseCaseMockRecorder) CreateVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVacancy", reflect.TypeOf((*MockVacancyUseCase)(nil).CreateVacancy), arg0)
}

// DeleteVacancy mocks base method
func (m *MockVacancyUseCase) DeleteVacancy(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVacancy", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVacancy indicates an expected call of DeleteVacancy
func (mr *MockVacancyUseCaseMockRecorder) DeleteVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVacancy", reflect.TypeOf((*MockVacancyUseCase)(nil).DeleteVacancy), arg0)
}

// GetOrgVacancies mocks base method
func (m *MockVacancyUseCase) GetOrgVacancies(arg0 uint64) ([]models.Vacancy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgVacancies", arg0)
	ret0, _ := ret[0].([]models.Vacancy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgVacancies indicates an expected call of GetOrgVacancies
func (mr *MockVacancyUseCaseMockRecorder) GetOrgVacancies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgVacancies", reflect.TypeOf((*MockVacancyUseCase)(nil).GetOrgVacancies), arg0)
}

// GetVacancies mocks base method
func (m *MockVacancyUseCase) GetVacancies(arg0 string) ([]models.Vacancy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVacancies", arg0)
	ret0, _ := ret[0].([]models.Vacancy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVacancies indicates an expected call of GetVacancies
func (mr *MockVacancyUseCaseMockRecorder) GetVacancies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVacancies", reflect.TypeOf((*MockVacancyUseCase)(nil).GetVacancies), arg0)
}

// GetVacancy mocks base method
func (m *MockVacancyUseCase) GetVacancy(arg0 uint64) (*models.Vacancy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVacancy", arg0)
	ret0, _ := ret[0].(*models.Vacancy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVacancy indicates an expected call of GetVacancy
func (mr *MockVacancyUseCaseMockRecorder) GetVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVacancy", reflect.TypeOf((*MockVacancyUseCase)(nil).GetVacancy), arg0)
}
