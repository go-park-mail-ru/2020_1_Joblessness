// Code generated by MockGen. DO NOT EDIT.
// Source: joblessness/haha/vacancy/interfaces (interfaces: VacancyRepository)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	baseModels "joblessness/haha/models/base"
	pgModels "joblessness/haha/models/postgres"
	reflect "reflect"
)

// MockVacancyRepository is a mock of VacancyRepository interface
type MockVacancyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockVacancyRepositoryMockRecorder
}

// MockVacancyRepositoryMockRecorder is the mock recorder for MockVacancyRepository
type MockVacancyRepositoryMockRecorder struct {
	mock *MockVacancyRepository
}

// NewMockVacancyRepository creates a new mock instance
func NewMockVacancyRepository(ctrl *gomock.Controller) *MockVacancyRepository {
	mock := &MockVacancyRepository{ctrl: ctrl}
	mock.recorder = &MockVacancyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVacancyRepository) EXPECT() *MockVacancyRepositoryMockRecorder {
	return m.recorder
}

// ChangeVacancy mocks base method
func (m *MockVacancyRepository) ChangeVacancy(arg0 *baseModels.Vacancy) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeVacancy", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeVacancy indicates an expected call of ChangeVacancy
func (mr *MockVacancyRepositoryMockRecorder) ChangeVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeVacancy", reflect.TypeOf((*MockVacancyRepository)(nil).ChangeVacancy), arg0)
}

// CheckAuthor mocks base method
func (m *MockVacancyRepository) CheckAuthor(arg0, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAuthor", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckAuthor indicates an expected call of CheckAuthor
func (mr *MockVacancyRepositoryMockRecorder) CheckAuthor(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAuthor", reflect.TypeOf((*MockVacancyRepository)(nil).CheckAuthor), arg0, arg1)
}

// CreateVacancy mocks base method
func (m *MockVacancyRepository) CreateVacancy(arg0 *baseModels.Vacancy) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVacancy", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVacancy indicates an expected call of CreateVacancy
func (mr *MockVacancyRepositoryMockRecorder) CreateVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVacancy", reflect.TypeOf((*MockVacancyRepository)(nil).CreateVacancy), arg0)
}

// DeleteVacancy mocks base method
func (m *MockVacancyRepository) DeleteVacancy(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVacancy", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVacancy indicates an expected call of DeleteVacancy
func (mr *MockVacancyRepositoryMockRecorder) DeleteVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVacancy", reflect.TypeOf((*MockVacancyRepository)(nil).DeleteVacancy), arg0)
}

// GetOrgVacancies mocks base method
func (m *MockVacancyRepository) GetOrgVacancies(arg0 uint64) (baseModels.Vacancies, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgVacancies", arg0)
	ret0, _ := ret[0].(baseModels.Vacancies)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgVacancies indicates an expected call of GetOrgVacancies
func (mr *MockVacancyRepositoryMockRecorder) GetOrgVacancies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgVacancies", reflect.TypeOf((*MockVacancyRepository)(nil).GetOrgVacancies), arg0)
}

// GetRelatedUsers mocks base method
func (m *MockVacancyRepository) GetRelatedUsers(arg0 uint64) ([]uint64, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelatedUsers", arg0)
	ret0, _ := ret[0].([]uint64)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetRelatedUsers indicates an expected call of GetRelatedUsers
func (mr *MockVacancyRepositoryMockRecorder) GetRelatedUsers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelatedUsers", reflect.TypeOf((*MockVacancyRepository)(nil).GetRelatedUsers), arg0)
}

// GetVacancies mocks base method
func (m *MockVacancyRepository) GetVacancies(arg0 int) (baseModels.Vacancies, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVacancies", arg0)
	ret0, _ := ret[0].(baseModels.Vacancies)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVacancies indicates an expected call of GetVacancies
func (mr *MockVacancyRepositoryMockRecorder) GetVacancies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVacancies", reflect.TypeOf((*MockVacancyRepository)(nil).GetVacancies), arg0)
}

// GetVacancy mocks base method
func (m *MockVacancyRepository) GetVacancy(arg0 uint64) (*baseModels.Vacancy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVacancy", arg0)
	ret0, _ := ret[0].(*baseModels.Vacancy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVacancy indicates an expected call of GetVacancy
func (mr *MockVacancyRepositoryMockRecorder) GetVacancy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVacancy", reflect.TypeOf((*MockVacancyRepository)(nil).GetVacancy), arg0)
}

// GetVacancyOrganization mocks base method
func (m *MockVacancyRepository) GetVacancyOrganization(arg0 uint64) (*pgModels.User, *pgModels.Organization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVacancyOrganization", arg0)
	ret0, _ := ret[0].(*pgModels.User)
	ret1, _ := ret[1].(*pgModels.Organization)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetVacancyOrganization indicates an expected call of GetVacancyOrganization
func (mr *MockVacancyRepositoryMockRecorder) GetVacancyOrganization(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVacancyOrganization", reflect.TypeOf((*MockVacancyRepository)(nil).GetVacancyOrganization), arg0)
}
