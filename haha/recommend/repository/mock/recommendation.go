// Code generated by MockGen. DO NOT EDIT.
// Source: joblessness/haha/recommend/interfaces (interfaces: RecommendationRepository)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	baseModels "joblessness/haha/models/base"
	reflect "reflect"
)

// MockRecommendationRepository is a mock of RecommendationRepository interface
type MockRecommendationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRecommendationRepositoryMockRecorder
}

// MockRecommendationRepositoryMockRecorder is the mock recorder for MockRecommendationRepository
type MockRecommendationRepositoryMockRecorder struct {
	mock *MockRecommendationRepository
}

// NewMockRecommendationRepository creates a new mock instance
func NewMockRecommendationRepository(ctrl *gomock.Controller) *MockRecommendationRepository {
	mock := &MockRecommendationRepository{ctrl: ctrl}
	mock.recorder = &MockRecommendationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRecommendationRepository) EXPECT() *MockRecommendationRepositoryMockRecorder {
	return m.recorder
}

// GetRecommendedVacancies mocks base method
func (m *MockRecommendationRepository) GetRecommendedVacancies(arg0 uint64) ([]baseModels.Vacancy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecommendedVacancies", arg0)
	ret0, _ := ret[0].([]baseModels.Vacancy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecommendedVacancies indicates an expected call of GetRecommendedVacancies
func (mr *MockRecommendationRepositoryMockRecorder) GetRecommendedVacancies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecommendedVacancies", reflect.TypeOf((*MockRecommendationRepository)(nil).GetRecommendedVacancies), arg0)
}
